#### här går koden genom hela datafilen automatiskt #####

###########################################################################
############### BASBLOCK ##################################################
###########################################################################

# Imports
import pandas as pd # Matte
import numpy as np # Matte
import matplotlib as plt # Visualisering
import matplotlib.pyplot as plt # Visualisering

# Hämta datan
train = pd.read_csv('train-final.csv',encoding='latin-1',sep=',')
test = pd.read_csv('test-final.csv',encoding='latin-1',sep=',')

###########################################################################
############### GER DATAFRAMSEN HEADER MED VAD KOLUMNERNA INNEHÅLLER#######
###########################################################################

# alla xyz- och vinkel-koord
num_sets_space = 60
num_cols_per_set_space = 3

num_sets_angle = 60
num_cols_per_set_angle = 1

# Generates the coord with appropriate index and creates a 1d dataframe
space_names = [f'{coord}_{i}' for i in range(1, num_sets_space + 1) for coord in ['x', 'y', 'z']]
angle_names = [f'{coord}_{i}' for i in range(1, num_sets_angle + 1) for coord in ['v']]
index_names = ['word', 'index']

# Combine the lists into one row DataFrame
names = space_names + angle_names + index_names

# Reshape dataframes into two-dimensional arrays
reshaped_test = np.reshape(test.values, (-1, test.shape[-1]))
reshaped_train = np.reshape(train.values, (-1, train.shape[-1]))

# Create a DataFrame with names as index and reshaped_test as data
test_head = pd.DataFrame(reshaped_test, columns=names)
train_head = pd.DataFrame(reshaped_train, columns=names)

test_head.head()

###########################################################################
# PREPPAR DATAN FÖR CLASSIFYERS ###########################################
###########################################################################

#hitta alla nan-värden och byt ut dem

# Get all unique words from the 'word' column
unique_words = train_head['word'].unique()

# Iterate over each unique word
for word in unique_words:
  # Filter the DataFrame to get instances of the current word
  gest_all = train_head[train_head['word'] == word]

  # Print the word
  #print("Word:", word)

  # Loop through all instances of the word
  for i in range(len(gest_all)):
    gest = gest_all.iloc[i]

    gest_f1 = gest.iloc[0:60]

    x = gest_f1.iloc[0::3]
    y = gest_f1.iloc[1::3]
    z = gest_f1.iloc[2::3]

    # Print the instances of the word
    #print("Instance:", i + 1)
    #print("x:", x)
    #print("y:", y)
    #print("z:", z)
    for index in range(1, 2):
      x_columns = train_head.filter(like=f'x_{index}')

        # Display the resulting DataFrame
      #print(x_columns)

